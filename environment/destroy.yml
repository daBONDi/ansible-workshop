# Destroy the hole workshop

- name: "Remove Workshop from AWS"
  hosts: localhost
  gather_facts: false

  vars_files:
    - env_config.yml
  vars:
    workshop: "{{ workshop_configuration}}"
  tasks:

    - name: "Get vpc information for {{ workshop.name }}"
      ec2_vpc_net_facts:
        region: "{{ workshop.aws.region }}"
        filters:
          "tag:workshop": "{{ workshop.name }}"
      register: vpc_query

    # Remove EC2 instances
    - name: "Ensure Remove all EC2 instances from workshop {{ workshop.name }}"
      ec2_instance:
        state: absent
        region: "{{ workshop.aws.region }}"
        filters:
          "tag:workshop": "{{ workshop.name }}"
      register: ec2_instances


    # Remove Security Groups
    - name: "Get all security groups for workshop {{ workshop.name }} for removal"
      ec2_group_facts:
        region: "{{ workshop.aws.region }}"
        filters:
          "tag:workshop": "{{ workshop.name }}"
      register: security_groups_query

    - name: "Remove all security groups for workshop {{ workshop.name }}"
      ec2_group:
        group_id: "{{ item.group_id }}"
        region: "{{ workshop.aws.region }}"
        state: absent
      async: 7200
      poll: 2
      with_items: "{{ security_groups_query.security_groups }}"

    # Remove VPC Subnets
    - name: "Get all subnets from workshop {{ workshop.name }} for removal"
      ec2_vpc_subnet_facts:
        region: "{{ workshop.aws.region }}"
        filters:
          "tag:workshop": "{{ workshop.name }}"
      register: vpc_subnets_to_remove

    - name: "Remove all subnets for workshop {{ workshop.name }}"
      ec2_vpc_subnet:
        region: "{{ workshop.aws.region }}"
        vpc_id: "{{ item.vpc_id }}"
        cidr: "{{ workshop.aws.vpc.cidr }}"
        state: absent
      with_items: "{{ vpc_subnets_to_remove.subnets }}"
      async: 7200
      poll: 2

    # Remove Internet Gateway
    - name: "Remove igw from workshop {{ workshop.name }} vpc"
      ec2_vpc_igw:
        vpc_id: "{{ vpc_query.vpcs[0].vpc_id }}"
        region: "{{ workshop.aws.region }}"
        state: absent

    # Remove VPC
    - name: "Remove vpc for workshop {{ workshop.name }}"
      ec2_vpc_net:
        name: "{{ workshop.name }}"
        region: "{{ workshop.aws.region }}"
        cidr_block: "{{ workshop.aws.vpc.cidr }}"
        state: absent
    
    # Remove EC2 Key
    - name: "Remove ec2 key pair for workshop {{ workshop.name }}"
      ec2_key:
        region: "{{ workshop.aws.region }}"
        name: "{{ workshop.aws.keypair.name }}"
        key_material: "{{ workshop.aws.keypair.value }}"
        state: absent
